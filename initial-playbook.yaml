---
- name: To install httpd and ensure apache is running
  hosts: group
  become: yes
  vars:        # variables used for create multiple users job
    users_to_create:
      - name: alice
        password: "{{ 'password123' | password_hash('sha512', 'mysecretsalt') }}"
        groups: Multipleusers
      - name: bob
        password: "{{ 'password456' | password_hash('sha512', 'mysecretsalt') }}"
        groups: Multipleusers
  tasks:
    - name: Installation of httpd
      yum:
        name: httpd
        state: latest

    - name: Ensure apache is running
      service:
        name: httpd
        state: started

    - name: Copy file to a remote machine
      copy:
        src: /tmp/index.html
        dest: /var/www/html/index.html
        force: yes

    - name: Change the listening port to 81
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: '^Listen 80'
        insertafter: '^#Listen '
        line: Listen 81   

    - name: ensure apache is running
      service:
        name: httpd
        state: restarted

    - name: execute the curl command
      shell:
         cmd: curl localhost:81 > /tmp/output.txt

    # create multiple users with items 
    - name: Create multiple users
      user:
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        groups: "{{ item.groups }}"
        state: present
      with_items: "{{ users_to_create }}"     # will execute the variables one by one mentioned in var
    

    # install multiple packages with ansible
    - name: Install multiple packages with ansible
      yum:
        name:
          - tree
          - mlocate
        state: present

    # gather facts
    - name: Print Hostname
      ansible.builtin.debug:
        var: ansible_hostname

    # using gather facts
    - name: Install httpd on RedHat-based systems
      package:
        name: "httpd"
        state: present
      when: ansible_facts["os_name"] == "RedHat"

    - name: Install apache2 on Ubuntu-based systems
      package:
        name: "apache2"
        state: present
      when: ansible_facts["os_name"] == "Ubuntu"
      # check



